{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport RoleItem from \"../../components/RoleItem/RoleItem\";\nimport { URL_GOOGLE_SHEETS } from \"../../constants\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RolezandoList = () => {\n  _s();\n  const [list, setList] = useState();\n  const [hasError, setHasError] = useState(false);\n  useEffect(() => {\n    const data = fetch(URL_GOOGLE_SHEETS).then(res => res.text());\n    data.then(result => console.log(result));\n  }, []);\n  const convertData = () => {\n    let csv = `\"Carimbo de data/hora\",\n      \"Endereço de e-mail\",\n      \"Nome do lugar?\",\n      \"Cidade:\",\n      \"Categoria: \",\n      \"Preço:\",\n      \"Tem espaço para crianças?\",\n      \"Nota para o lugar:\",\n      \"Comentários:\";\n    \"08/10/2023 19:18:42\",\n      \"keyla.klc@gmail.com\",\n      \"Teste\",\n      \"Sorocaba\",\n      \"Pizzaria, Hamburgueria, Churrascaria, Japonesa\",\n      \"4\",\n      \"Não\",\n      \"2\",\n      \"Sem notas\"`;\n    let lines = [];\n    const linesArray = csv.split(\"\\n\");\n    // for trimming and deleting extra space\n    linesArray.forEach(e => {\n      const row = e.replace(/[\\s]+[,]+|[,]+[\\s]+/g, \",\").trim();\n      lines.push(row);\n    });\n    // for removing empty record\n    lines.splice(lines.length - 1, 1);\n    const result = [];\n    const headers = lines[0].split(\",\");\n    for (let i = 1; i < lines.length; i++) {\n      const obj = {};\n      const currentline = lines[i].split(\";\");\n      for (let j = 0; j < headers.length; j++) {\n        obj[headers[j]] = currentline[j];\n      }\n      result.push(obj);\n    }\n    console.log(result);\n    return JSON.stringify(result); //JSON\n  };\n\n  convertData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(RolezandoList, \"JGm/rOuO5bF1H3yh2YOW6pjGHz4=\");\n_c = RolezandoList;\nexport default RolezandoList;\nvar _c;\n$RefreshReg$(_c, \"RolezandoList\");","map":{"version":3,"names":["React","useEffect","useState","RoleItem","URL_GOOGLE_SHEETS","Fragment","_Fragment","jsxDEV","_jsxDEV","RolezandoList","_s","list","setList","hasError","setHasError","data","fetch","then","res","text","result","console","log","convertData","csv","lines","linesArray","split","forEach","e","row","replace","trim","push","splice","length","headers","i","obj","currentline","j","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/paulocamara/Desktop/rolezando-por-ai/src/pages/RolezandoList/RolezandoList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport RoleItem from \"../../components/RoleItem/RoleItem\";\nimport { URL_GOOGLE_SHEETS } from \"../../constants\";\n\nconst RolezandoList = () => {\n  const [list, setList] = useState();\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    const data = fetch(URL_GOOGLE_SHEETS).then((res) => res.text());\n\n    data.then((result) => console.log(result));\n  }, []);\n\n  const convertData = () => {\n    let csv = `\"Carimbo de data/hora\",\n      \"Endereço de e-mail\",\n      \"Nome do lugar?\",\n      \"Cidade:\",\n      \"Categoria: \",\n      \"Preço:\",\n      \"Tem espaço para crianças?\",\n      \"Nota para o lugar:\",\n      \"Comentários:\";\n    \"08/10/2023 19:18:42\",\n      \"keyla.klc@gmail.com\",\n      \"Teste\",\n      \"Sorocaba\",\n      \"Pizzaria, Hamburgueria, Churrascaria, Japonesa\",\n      \"4\",\n      \"Não\",\n      \"2\",\n      \"Sem notas\"`;\n\n    let lines = [];\n    const linesArray = csv.split(\"\\n\");\n    // for trimming and deleting extra space\n    linesArray.forEach((e: any) => {\n      const row = e.replace(/[\\s]+[,]+|[,]+[\\s]+/g, \",\").trim();\n      lines.push(row);\n    });\n    // for removing empty record\n    lines.splice(lines.length - 1, 1);\n    const result = [];\n    const headers = lines[0].split(\",\");\n\n    for (let i = 1; i < lines.length; i++) {\n      const obj = {};\n      const currentline = lines[i].split(\";\");\n\n      for (let j = 0; j < headers.length; j++) {\n        obj[headers[j]] = currentline[j];\n      }\n      result.push(obj);\n    }\n    console.log(result);\n\n    return JSON.stringify(result); //JSON\n  };\n\n  convertData();\n\n  return (\n    <>\n      {/* {list.map((item) => (\n        <RoleItem data={item} />\n      ))} */}\n    </>\n  );\n};\n\nexport default RolezandoList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,SAASC,iBAAiB,QAAQ,iBAAiB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAMc,IAAI,GAAGC,KAAK,CAACZ,iBAAiB,CAAC,CAACa,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;IAE/DJ,IAAI,CAACE,IAAI,CAAEG,MAAM,IAAKC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,GAAG,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;IAEd,IAAIC,KAAK,GAAG,EAAE;IACd,MAAMC,UAAU,GAAGF,GAAG,CAACG,KAAK,CAAC,IAAI,CAAC;IAClC;IACAD,UAAU,CAACE,OAAO,CAAEC,CAAM,IAAK;MAC7B,MAAMC,GAAG,GAAGD,CAAC,CAACE,OAAO,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC;MACzDP,KAAK,CAACQ,IAAI,CAACH,GAAG,CAAC;IACjB,CAAC,CAAC;IACF;IACAL,KAAK,CAACS,MAAM,CAACT,KAAK,CAACU,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;IACjC,MAAMf,MAAM,GAAG,EAAE;IACjB,MAAMgB,OAAO,GAAGX,KAAK,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC;IAEnC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,CAACU,MAAM,EAAEE,CAAC,EAAE,EAAE;MACrC,MAAMC,GAAG,GAAG,CAAC,CAAC;MACd,MAAMC,WAAW,GAAGd,KAAK,CAACY,CAAC,CAAC,CAACV,KAAK,CAAC,GAAG,CAAC;MAEvC,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,OAAO,CAACD,MAAM,EAAEK,CAAC,EAAE,EAAE;QACvCF,GAAG,CAACF,OAAO,CAACI,CAAC,CAAC,CAAC,GAAGD,WAAW,CAACC,CAAC,CAAC;MAClC;MACApB,MAAM,CAACa,IAAI,CAACK,GAAG,CAAC;IAClB;IACAjB,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IAEnB,OAAOqB,IAAI,CAACC,SAAS,CAACtB,MAAM,CAAC,CAAC,CAAC;EACjC,CAAC;;EAEDG,WAAW,CAAC,CAAC;EAEb,oBACEf,OAAA,CAAAF,SAAA,mBAIE,CAAC;AAEP,CAAC;AAACI,EAAA,CAjEID,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAmEnB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}